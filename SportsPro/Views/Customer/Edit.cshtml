@model SportsPro.Models.Customer

@{
    Layout = "_Layout";
}

<!DOCTYPE html>

<html>

<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>

<body>

    <h4>Customer</h4>
    <hr />
    <div class="row">
       <div class="col-md-4">
    <form asp-action="Edit" method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="CustomerID" />

        <div class="form-group">
            <label asp-for="FirstName" class="control-label"></label>
            <input asp-for="FirstName" 
                   class="form-control @(ViewData.ModelState["FirstName"]?.Errors.Count > 0 ? "is-invalid" : "")" />
            <span asp-validation-for="FirstName" class="invalid-feedback"></span>
        </div>

        <div class="form-group">
            <label asp-for="LastName" class="control-label"></label>
            <input asp-for="LastName" 
                   class="form-control @(ViewData.ModelState["LastName"]?.Errors.Count > 0 ? "is-invalid" : "")" />
            <span asp-validation-for="LastName" class="invalid-feedback"></span>
        </div>

        <div class="form-group">
            <label asp-for="Address" class="control-label"></label>
            <input asp-for="Address" 
                   class="form-control @(ViewData.ModelState["Address"]?.Errors.Count > 0 ? "is-invalid" : "")" />
            <span asp-validation-for="Address" class="invalid-feedback"></span>
        </div>

        <div class="form-group">
            <label asp-for="City" class="control-label"></label>
            <input asp-for="City" 
                   class="form-control @(ViewData.ModelState["City"]?.Errors.Count > 0 ? "is-invalid" : "")" />
            <span asp-validation-for="City" class="invalid-feedback"></span>
        </div>

        <div class="form-group">
            <label asp-for="State" class="control-label"></label>
            <input asp-for="State" 
                   class="form-control @(ViewData.ModelState["State"]?.Errors.Count > 0 ? "is-invalid" : "")" />
            <span asp-validation-for="State" class="invalid-feedback"></span>
        </div>

        <div class="form-group">
            <label asp-for="PostalCode" class="control-label"></label>
            <input asp-for="PostalCode" 
                   class="form-control @(ViewData.ModelState["PostalCode"]?.Errors.Count > 0 ? "is-invalid" : "")" />
            <span asp-validation-for="PostalCode" class="invalid-feedback"></span>
        </div>

        <div class="form-group">
            <label asp-for="Phone" class="control-label"></label>
            <input asp-for="Phone" 
                   class="form-control @(ViewData.ModelState["Phone"]?.Errors.Count > 0 ? "is-invalid" : "")" />
            <span asp-validation-for="Phone" class="invalid-feedback"></span>
        </div>

        <div class="form-group">
            <label asp-for="Email" class="control-label"></label>
            <input asp-for="Email" 
                   class="form-control @(ViewData.ModelState["Email"]?.Errors.Count > 0 ? "is-invalid" : "")" />
            <span asp-validation-for="Email" class="invalid-feedback"></span>
        </div>

        <div class="form-group">
            <label asp-for="CountryID" class="control-label"></label>
            <select asp-for="CountryID" 
                    class="form-control @(ViewData.ModelState["CountryID"]?.Errors.Count > 0 ? "is-invalid" : "")" 
                    asp-items="ViewBag.CountryID"></select>
            <span asp-validation-for="CountryID" class="invalid-feedback"></span>
        </div>

        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-primary" />
            <a asp-action="List" class="btn btn-secondary">Back to List</a>
        </div>
    </form>
</div>

    </div>

    @* <div>
    <a asp-action="Index">Back to List</a>
</div> *@

</body>

</html>
